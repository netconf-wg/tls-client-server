<!-- The outermost element below doesn't exist in the data model. -->
<!--  It simulates if the "grouping" were a "container" instead.  -->
<tls-client xmlns="urn:ietf:params:xml:ns:yang:ietf-tls-client" xmlns:ct="urn:ietf:params:xml:ns:yang:ietf-crypto-types">
    <!-- how this client will authenticate itself to the server -->
    <client-identity>
        <certificate>
            <local-definition>
                <public-key-format>ct:subject-public-key-info-format</public-key-format>
                <public-key>BASE64VALUE=</public-key>
                <private-key-format>ct:rsa-private-key-format</private-key-format>
                <cleartext-private-key>BASE64VALUE=</cleartext-private-key>
                <cert-data>BASE64VALUE=</cert-data>
            </local-definition>
        </certificate>
        <!-- TESTED, BUT COMMENTED OUT DUE TO ONLY ONE ALLOWED AT A TIME
        <raw-private-key>
         <local-definition>
            <public-key-format>ct:subject-public-key-info-format</public-key-format>
            <public-key>BASE64VALUE=</public-key>
            <private-key-format>ct:rsa-private-key-format</private-key-format>
            <cleartext-private-key>BASE64VALUE=</cleartext-private-key>
          </local-definition>
        </raw-private-key>
        -->
        <!-- USE ONLY ONE AT A TIME  
        <tls12-psk>
            <local-definition>
                <key-format>ct:octet-string-key-format</key-format>
                <cleartext-key>BASE64VALUE=</cleartext-key>
            </local-definition>
            <id>example_id_string</id>
        </tls12-psk>
        -->
        <tls13-epsk>
            <local-definition>
                <key-format>ct:octet-string-key-format</key-format>
                <cleartext-key>BASE64VALUE=</cleartext-key>
            </local-definition>
            <external-identity>example_external_id</external-identity>
            <hash>sha-256</hash>
            <context>example_context_string</context>
            <target-protocol>8443</target-protocol>
            <target-kdf>12345</target-kdf>
        </tls13-epsk>
    </client-identity>
    <!-- which certificates will this client trust -->
    <server-authentication>
        <ca-certs>
            <local-definition>
                <certificate>
                    <name>Server Cert Issuer #1</name>
                    <cert-data>BASE64VALUE=</cert-data>
                </certificate>
                <certificate>
                    <name>Server Cert Issuer #2</name>
                    <cert-data>BASE64VALUE=</cert-data>
                </certificate>
            </local-definition>
        </ca-certs>
        <ee-certs>
            <local-definition>
                <certificate>
                    <name>My Application #1</name>
                    <cert-data>BASE64VALUE=</cert-data>
                </certificate>
                <certificate>
                    <name>My Application #2</name>
                    <cert-data>BASE64VALUE=</cert-data>
                </certificate>
            </local-definition>
        </ee-certs>
        <raw-public-keys>
            <local-definition>
                <public-key>
                    <name>corp-fw1</name>
                    <public-key-format>ct:subject-public-key-info-format</public-key-format>
                    <public-key>BASE64VALUE=</public-key>
                </public-key>
                <public-key>
                    <name>corp-fw1</name>
                    <public-key-format>ct:subject-public-key-info-format</public-key-format>
                    <public-key>BASE64VALUE=</public-key>
                </public-key>
            </local-definition>
        </raw-public-keys>
        <tls12-psks/>
        <tls13-epsks/>
    </server-authentication>
    <keepalives>
        <test-peer-aliveness>
            <max-wait>30</max-wait>
            <max-attempts>3</max-attempts>
        </test-peer-aliveness>
    </keepalives>
</tls-client>
